import { createRoot } from "react-dom/client";
import App from "./App";
import "./index.css";

// Set the document direction for RTL support
document.documentElement.dir = "rtl";
document.documentElement.lang = "ar";

// Service Worker Management
if ('serviceWorker' in navigator) {
  if (import.meta.env.DEV) {
    // ŸÅŸä ÿßŸÑÿ™ÿ∑ŸàŸäÿ±: ÿ™ÿ≥ÿ¨ŸäŸÑ kill-switch SW ŸÑŸÖÿ≥ÿ≠ SW ÿßŸÑŸÇÿØŸäŸÖ
    (async () => {
      try {
        console.log('üî• PWA: Registering kill-switch SW...');
        await navigator.serviceWorker.register('/sw-kill.js', { scope: '/' });
        
        // ÿßŸÜÿ™ÿ∏ÿßÿ± ŸÇŸÑŸäŸÑ ÿ´ŸÖ ŸÖÿ≥ÿ≠ registrations
        setTimeout(async () => {
          const registrations = await navigator.serviceWorker.getRegistrations();
          registrations.forEach(r => r.unregister());
          
          if ('caches' in window) {
            const keys = await caches.keys();
            keys.forEach(k => caches.delete(k));
          }
          
          console.log('üîß PWA: Development cleanup complete');
        }, 1000);
        
      } catch (error) {
        console.error('üî• PWA: Kill-switch failed:', error);
      }
    })();
  } else {
    // ŸÅŸä Production: ÿ™ÿ≥ÿ¨ŸäŸÑ SW ÿπÿßÿØŸä
    navigator.serviceWorker.register('/sw.js')
      .then(() => console.log('‚úÖ PWA: Service Worker registered'))
      .catch(error => console.error('‚ùå PWA: SW registration failed:', error));
  }
}

createRoot(document.getElementById("root")!).render(<App />);
